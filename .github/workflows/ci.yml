name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_mysql, gd, zip
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Install dependencies (backend)
        working-directory: backend
        run: |
          if [ -f composer.json ]; then composer install --no-interaction --no-progress; else echo "skip"; fi

      - name: Run tests (backend)
        working-directory: backend
        run: |
          if [ -x vendor/bin/phpunit ]; then vendor/bin/phpunit --colors=never; else echo "no phpunit"; fi

  frontend-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install and test (frontend)
        working-directory: frontend
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run -s lint || echo "no lint"
            npm run -s test || echo "no test"
            npm run -s build || echo "no build"
          else
            echo "skip"
          fi

  compose-smoke:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up (dev)
        run: |
          cp -n .env.example .env || true
          docker compose up -d --build

      - name: Healthcheck
        run: |
          curl -fsS http://localhost:8080 || (docker compose logs nginx backend && exit 1)
          curl -fsS http://localhost:5173 || (docker compose logs frontend && exit 1)

      - name: Compose down
        if: always()
        run: docker compose down -v
